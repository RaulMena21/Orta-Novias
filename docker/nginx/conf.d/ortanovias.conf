# Configuración del servidor principal
server {
    listen 80;
    server_name ortanovias.com www.ortanovias.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name ortanovias.com www.ortanovias.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/ortanovias.com.crt;
    ssl_certificate_key /etc/nginx/ssl/ortanovias.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers específicos
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: *.cloudfront.net; connect-src 'self' api.ortanovias.com;" always;
    
    # Root para archivos estáticos del frontend
    root /static;
    index index.html;

    # Configuración de logs específicos
    access_log /var/log/nginx/ortanovias_access.log;
    error_log /var/log/nginx/ortanovias_error.log;

    # Archivos estáticos de Django
    location /static/ {
        alias /static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Compresión específica para archivos estáticos
        location ~* \.(css|js)$ {
            gzip_static on;
            expires 1y;
        }
        
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            expires 1y;
        }
    }

    # Archivos de media (uploads)
    location /media/ {
        alias /media/;
        expires 30d;
        add_header Cache-Control "public";
        
        # Limitar tamaño de archivos
        client_max_body_size 50M;
        
        # Bloquear ejecución de scripts en media
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }

    # API Backend - Con rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # Admin Django - Rate limiting más estricto
    location /admin/ {
        limit_req zone=auth burst=5 nodelay;
        limit_req_status 429;
        
        # Solo permitir desde España (ejemplo de geo-blocking)
        # allow 0.0.0.0/0; # Cambiar por rangos de IP españoles en producción
        
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Autenticación - Rate limiting muy estricto
    location ~* /api/(token|auth)/ {
        limit_req zone=auth burst=3 nodelay;
        limit_req_status 429;
        
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend React - SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers para SPA
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Bloquear archivos sensibles
    location ~* \.(env|git|svn|log|conf)$ {
        deny all;
        return 404;
    }

    # Bloquear bots maliciosos
    location ~* (wp-admin|wp-login|xmlrpc) {
        deny all;
        return 404;
    }
}

# Configuración para Flower (Monitor de Celery)
server {
    listen 5555 ssl;
    server_name flower.ortanovias.com;

    # SSL Configuration (usar mismo certificado)
    ssl_certificate /etc/nginx/ssl/ortanovias.com.crt;
    ssl_certificate_key /etc/nginx/ssl/ortanovias.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    # Autenticación básica para Flower
    auth_basic "Flower - Celery Monitor";
    auth_basic_user_file /etc/nginx/.htpasswd;

    location / {
        proxy_pass http://flower:5555;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
